package com.example.demo.controller;
import java.sql.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.model.User;
import com.example.demo.repository.UserRepository;


@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	
	
	
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @CrossOrigin(origins = "http://localhost:5173/")
  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String username
      , @RequestParam String first_name,@RequestParam String last_name,@RequestParam String gender,@RequestParam Date DOB,@RequestParam int profile_id) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
	  
	  
	  

    User n = new User();
    n.setDOB(DOB);
    n.setUsername(username);
    n.setFirst_name(first_name);
    n.setGender(gender);
    n.setLast_name(last_name);
    n.setProfile_id(profile_id);
    userRepository.save(n);
    return "Saved";
  }
  

  
  
  @CrossOrigin(origins = "http://localhost:5173/")
  @GetMapping(path="/all")
  public @ResponseBody Iterable<User> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }
}
